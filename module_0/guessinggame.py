# -*- coding: utf-8 -*-
"""GuessingGame.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C_0WuvWS7MUzc5MYZ_InZ_g4Kq4W2YVK
"""

import numpy as np

def binary_search(min, max):
  """function is used to perform binary search on given min / max values""" 
  return (int(min + ((max - min) / 2)))


def game(number):
  count = 0
  min = 0
  max = 101
  # Uncomment next line if you want to see the chosen number
  #print(f"You've picked the number: { number }")
  while True:
    count += 1
    guessed_number = binary_search(min, max)
    if guessed_number == number:
      return count
    elif guessed_number < number:
      min = guessed_number
    elif guessed_number > number:
      max = guessed_number


def score_game(game):
  count_ls = []
  np.random.seed(1)  # фиксируем RANDOM SEED, чтобы ваш эксперимент был воспроизводим!
  random_array = np.random.randint(1,101, size=(1000))
  for number in random_array:
      count_ls.append(game(number))
  score = int(np.mean(count_ls))
  print(f"Ваш алгоритм угадывает число в среднем за {score} попыток")


score_game(game)